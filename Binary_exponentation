//binary exponentiation is used to calculate the power a number in O(log n)
//There are 2 approaches.using while loop and recursion

#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
ll binary_exponentation1(ll a,ll b){
	//using while loop
	ll res=1;
	while(b>0){
		if(b&1)res*=a;
		a=a*a;
		b=b>>1;
	}
	return res;
}
ll binary_exponentation2(ll a,ll b){
	//recursion
	if(b==0)return 1;
	ll res=binary_exponentation2(a,b>>1);
	if(b&1)return res*res*a;
	else return res*res;
}
int main(){
	ll a,b;
	cin>>a>>b;
	cout<<binary_exponentation1(a,b)<<endl;
	cout<<binary_exponentation2(a,b)<<endl;
}
